

data Tree
    | Leaf Int
    | Bin lt :: Tree
          rt :: Tree

deriving Tree : Show
         
attr Tree
    inh minval :: Int
    syn m      :: Int
    syn res    :: Tree
    
sem Tree
    | Leaf lhs.m   = @int
              .res = Leaf @lhs.minval
    | Bin  lhs.m   = @lt.m `min` @rt.m
              .res = Bin @lt.res @rt.res
              
data Root
    | Root Tree
    
    
attr Root
    syn res :: Tree
    
sem Root
    | Root tree.minval = @tree.m
    
    
-- Haskell Code    
{
ejTree = Bin (Leaf 3) (Bin (Leaf 4) (Leaf 5))


resTree = res_Syn_Root (wrap_Root (sem_Root (Root ejTree)) Inh_Root)
}

